{"version":3,"sources":["components/server-properties/server-properties.js","components/get-cert/get-cert.js","components/alert-bar/alert-bar-styles.js","components/alert-bar/alert-bar.js","services/auth.js","routes/config/config.js","services/api/enroller.js","services/api/backend.js","components/csr-info/csr-info.js","components/csr-box/csr-box-styles.js","components/csr-box/csr-box.js","routes/home.js","components/cert-properties/cert-properties-styles.js","components/cert-properties/cert-properties.js","routes/operation/operation.js","utils/scroll-to-top.js","components/app-bar/app-bar-styles.js","components/app-bar/app-bar.js","index.js"],"names":["ServerProperties","props","Grid","container","spacing","item","xs","Typography","variant","Select","value","caValue","fullWidth","onChange","event","setCAValue","target","MenuItem","GetCert","TextField","label","multiline","rows","certValue","setCertValue","useStyles","makeStyles","theme","root","margin","error","backgroundColor","palette","dark","success","warning","icon","fontSize","opacity","marginRight","message","display","alignItems","AlertBar","useState","isOpen","setIsOpen","handleClose","setMessage","classes","type","typeClassName","Snackbar","anchorOrigin","vertical","horizontal","open","onClose","SnackbarContent","className","clsx","aria-describedby","id","Error","CheckCircle","Warning","renderTypeIcon","action","IconButton","key","aria-label","color","onClick","Close","initOptions","url","protocol","realm","process","clientId","onLoad","keycloak","updateKeycloakToken","updateToken","getKeycloakToken","token","Config","correct","setCorrect","isApprobed","setIsApprobed","setError","useEffect","timer","setInterval","match","params","fetch","method","headers","Authorization","then","response","ok","json","csr","status","getCRT","text","clearInterval","catch","Container","maxWidth","Fragment","CircularProgress","size","onSubmit","data","crt","ca","body","JSON","stringify","postSetConfig","preventDefault","Box","border","p","borderRadius","justify","Divider","Button","CSRInfo","ou","mail","csrPath","csrpath","component","cn","c","st","l","o","padding","CSRBox","Paper","Link","to","disabled","Home","csrs","setCSRs","isLoaded","setIsLoaded","getCSRS","result","undefined","map","toString","formControl","width","algSize","Map","CertProperties","selectedAlgSize","setSelectedAlgSize","FormControl","algValue","setAlgValue","get","sizeValue","setSizeValue","keyIndex","setC","setST","setL","setO","setOU","setCN","setEmail","email","Operation","keyAlg","keySize","Math","trunc","postGetCRT","blob","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","appendChild","click","parentNode","removeChild","ScrollToTop","pathname","useLocation","scrollTo","set","flexGrow","background","default","marginBottom","menuButton","toolbar","borderBottom","divider","typoAppBarTitle","marginLeft","LamassuAppBar","AppBar","position","elevation","Toolbar","Avatar","alt","src","noWrap","replace","dotenv","config","Keycloak","init","auth","render","CssBaseline","exact","path","uuid","getElementById","location","reaload"],"mappings":"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","file":"static/js/main.f3da8204.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Grid, Typography, Select, MenuItem } from '@material-ui/core';\n\nexport default function ServerProperties(props) {\n  const handleCAValueChange = (event) => {\n    props.setCAValue(event.target.value);\n  };\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Typography variant=\"h6\">Select CA:</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Select value={props.caValue} fullWidth onChange={handleCAValueChange}>\n          <MenuItem value={'Lamassu-Root-CA1-RSA4096'}>\n            Lamassu-Root-CA1-RSA4096\n          </MenuItem>\n          <MenuItem value={'Lamassu-Root-CA2-RSA2048'}>\n            Lamassu-Root-CA2-RSA2048\n          </MenuItem>\n          <MenuItem value={'Lamassu-Root-CA3-ECC384'}>\n            Lamassu-Root-CA3-ECC384\n          </MenuItem>\n          <MenuItem value={'Lamassu-Root-CA4-ECC256'}>\n            Lamassu-Root-CA4-ECC256\n          </MenuItem>\n        </Select>\n      </Grid>\n    </Grid>\n  );\n}\n\nServerProperties.propTypes = {\n  caValue: PropTypes.string.isRequired,\n  setCAValue: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Grid, Typography, TextField } from '@material-ui/core';\n\nexport default function GetCert(props) {\n  const handleCertValueChange = (event) => {\n    props.setCertValue(event.target.value);\n  };\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Typography variant=\"h6\">\n          Insert Certificate to authenticate:\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          label=\"Insert certificate here\"\n          multiline\n          fullWidth\n          rows={10}\n          value={props.certValue}\n          onChange={handleCertValueChange}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nGetCert.propTypes = {\n  certValue: PropTypes.string.isRequired,\n  setCertValue: PropTypes.func.isRequired,\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(1),\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  success: {\n    backgroundColor: theme.palette.success.dark,\n  },\n  warning: {\n    backgroundColor: theme.palette.warning.dark,\n  },\n  icon: {\n    fontSize: 20,\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n\nimport { Snackbar, SnackbarContent, IconButton } from '@material-ui/core';\nimport {\n  Error as ErrorIcon,\n  CheckCircle as CheckCircleIcon,\n  Warning as WarningIcon,\n  Close as CloseIcon,\n} from '@material-ui/icons';\n\nimport { useStyles } from './alert-bar-styles';\n\nexport default function AlertBar(props) {\n  const [isOpen, setIsOpen] = useState(true);\n\n  const handleClose = () => {\n    setIsOpen(false);\n    props.setMessage(null);\n  };\n\n  const classes = useStyles();\n  const type = props.type;\n  const typeClassName = classes[type];\n\n  const renderTypeIcon = () => {\n    switch (type) {\n      case 'error':\n        return <ErrorIcon className={classes.icon} />;\n      case 'success':\n        return <CheckCircleIcon className={classes.icon} />;\n      case 'warning':\n        return <WarningIcon className={classes.icon} />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      open={isOpen}\n      onClose={handleClose}\n    >\n      <SnackbarContent\n        className={clsx(classes.root, typeClassName)}\n        aria-describedby=\"client-snackbar\"\n        message={\n          <span id=\"client-snackbar\" className={classes.message}>\n            {renderTypeIcon()}\n            {props.message}\n          </span>\n        }\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"close\"\n            color=\"inherit\"\n            onClick={handleClose}\n          >\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n      />\n    </Snackbar>\n  );\n}\n\nAlertBar.propTypes = {\n  message: PropTypes.string.isRequired,\n  setMessage: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport uuid from 'react-uuid';\n\nimport { Redirect, Route } from 'react-router-dom';\n\nconst protocol = process.env.REACT_APP_KEYCLOAK_PROTOCOL;\nconst host = process.env.REACT_APP_KEYCLOAK_HOST;\nconst port = process.env.REACT_APP_KEYCLOAK_PORT;\nconst realm = process.env.REACT_APP_KEYCLOAK_REALM;\nconst clientId = process.env.REACT_APP_KEYCLOAK_CLIENT_ID;\n\nconst url = protocol + '://' + host + ':' + port + '/auth';\n\nlet initOptions = {\n  url: url,\n  realm: realm,\n  clientId: clientId,\n  onLoad: 'login-required',\n};\n\nvar keycloak = null;\n\nexport function initKeycloak() {\n  keycloak = new window.Keycloak({\n    url: initOptions.url,\n    realm: initOptions.realm,\n    clientId: initOptions.clientId,\n  });\n  return keycloak.init({ onLoad: initOptions.onLoad });\n}\n\nexport function updateKeycloakToken() {\n  return keycloak.updateToken(30);\n}\n\nexport function getKeycloakToken() {\n  return keycloak.token;\n}\n\nexport function goToProfile() {\n  return (\n    protocol + '://' + host + ':' + port + '/auth/realms/' + realm + '/account/'\n  );\n}\n\nexport function isAuthorized(roles) {\n  if (keycloak && roles) {\n    return roles.some((r) => {\n      const realm = keycloak.hasRealmRole(r);\n      const resource = keycloak.hasResourceRole(r);\n      return realm || resource;\n    });\n  }\n}\n\nexport function AuthorizedElement({ roles, children }) {\n  return isAuthorized(roles) && children;\n}\n\nexport function PrivateRoute({ component: Component, roles, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return isAuthorized(roles) ? (\n          <Component key={uuid()} {...props} />\n        ) : (\n          <Redirect to={{ pathname: '/' }} />\n        );\n      }}\n    />\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Container,\n  Grid,\n  Button,\n  Box,\n  Typography,\n  Divider,\n  CircularProgress,\n} from '@material-ui/core';\n\nimport ServerProperties from '../../components/server-properties';\nimport GetCert from '../../components/get-cert';\nimport AlertBar from '../../components/alert-bar';\n\nimport { postSetConfig } from '../../services/api/backend';\nimport { getCSRStatus, getCRT } from '../../services/api/enroller';\nimport { updateKeycloakToken } from '../../services/auth';\n\nexport default function Config(props) {\n  const [certValue, setCertValue] = useState('');\n  const [caValue, setCAValue] = useState('Lamassu-Root-CA1-RSA4096');\n  const [correct, setCorrect] = useState(null);\n  const [isApprobed, setIsApprobed] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const timer = setInterval(\n      () =>\n        updateKeycloakToken().success(() => {\n          getCSRStatus(props.match.params.id)\n            .then((response) => {\n              if (response.ok) {\n                response.json().then((csr) => {\n                  if (csr.status !== 'APPROBED') {\n                    setIsApprobed(false);\n                    setError(\n                      'Waiting to approbe CSR by Enroller, status is: ' +\n                        csr.status\n                    );\n                  } else {\n                    getCRT(props.match.params.id)\n                      .then((response) => {\n                        if (response.ok) {\n                          response.text().then((text) => {\n                            setCertValue(text);\n                          });\n                          clearInterval(timer);\n                          setIsApprobed(true);\n                          setError(null);\n                        }\n                      })\n                      .catch((error) => setError(error.message));\n                  }\n                });\n              } else {\n                response.text().then((text) => {\n                  setError(text);\n                  setIsApprobed(false);\n                });\n              }\n            })\n            .catch((error) => {\n              setError(error.message);\n            });\n        }),\n      10000\n    );\n  }, [props.match.params.id]);\n\n  const handleConfigSubmit = (event) => {\n    const data = {\n      crt: certValue,\n      ca: caValue,\n    };\n    updateKeycloakToken().success(() => {\n      postSetConfig(data)\n        .then((response) => {\n          if (response.ok) {\n            setCorrect('Configuration successfully loaded');\n          } else {\n            response.text().then((text) => {\n              setError(text);\n            });\n          }\n        })\n        .catch((error) => setError(error.message));\n    });\n    event.preventDefault();\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      {!isApprobed && (\n        <React.Fragment>\n          <CircularProgress size={100} />\n          <AlertBar\n            setMessage={() => {}}\n            message={'Waiting for Enroller response...'}\n            type=\"warning\"\n          />\n        </React.Fragment>\n      )}\n      {error !== null && (\n        <AlertBar setMessage={setError} message={error} type=\"error\" />\n      )}\n      {correct !== null && (\n        <AlertBar setMessage={setCorrect} message={correct} type=\"success\" />\n      )}\n      {isApprobed && (\n        <form onSubmit={handleConfigSubmit}>\n          <Box border={1} p={4} borderRadius=\"borderRadius\">\n            <Grid container spacing={2} justify=\"center\">\n              <Grid item xs={12}>\n                <Typography variant=\"h3\">Configuration (Step 2)</Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <Divider />\n              </Grid>\n              <Grid item xs={6}>\n                <GetCert setCertValue={setCertValue} certValue={certValue} />\n              </Grid>\n              <Grid item xs={6}>\n                <ServerProperties setCAValue={setCAValue} caValue={caValue} />\n              </Grid>\n              <Grid item xs={3}>\n                <Button\n                  fullWidth\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Set Configuration\n                </Button>\n              </Grid>\n            </Grid>\n          </Box>\n        </form>\n      )}\n    </Container>\n  );\n}\n\nConfig.propTypes = {\n  match: PropTypes.object.isRequired,\n};\n","import { getKeycloakToken } from '../auth';\n\nconst protocol = process.env.REACT_APP_ENROLLER_PROTOCOL;\nconst host = process.env.REACT_APP_ENROLLER_HOST;\nconst port = process.env.REACT_APP_ENROLLER_PORT;\nconst path = process.env.REACT_APP_ENROLLER_PATH;\n\nexport function getCSRs() {\n  const fetchUrl = protocol + '://' + host + ':' + port + path;\n  return fetch(fetchUrl, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + getKeycloakToken(),\n    },\n  });\n}\n\nexport function getCSRStatus(id) {\n  const fetchUrl = protocol + '://' + host + ':' + port + path + '/' + id;\n  return fetch(fetchUrl, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + getKeycloakToken(),\n    },\n  });\n}\n\nexport function getCRT(id) {\n  const fetchUrl =\n    protocol + '://' + host + ':' + port + path + '/' + id + '/crt';\n  return fetch(fetchUrl, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + getKeycloakToken(),\n    },\n  });\n}\n","import { getKeycloakToken } from '../auth';\n\nconst protocol = process.env.REACT_APP_DEVICE_PROTOCOL;\nconst host = process.env.REACT_APP_DEVICE_HOST;\nconst port = process.env.REACT_APP_DEVICE_PORT;\nconst path = process.env.REACT_APP_DEVICE_PATH;\n\nexport function postSetConfig(data) {\n  const fetchUrl = protocol + '://' + host + ':' + port + path + '/config';\n  return fetch(fetchUrl, {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      Authorization: 'Bearer ' + getKeycloakToken(),\n    },\n  });\n}\n\nexport function postGetCRT(data) {\n  const fetchUrl = protocol + '://' + host + ':' + port + path;\n  return fetch(fetchUrl, {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      Authorization: 'Bearer ' + getKeycloakToken(),\n    },\n  });\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Typography } from '@material-ui/core';\n\nexport default function CSRInfo(props) {\n  const ou = props.csr.ou;\n  const mail = props.csr.mail;\n  const csrPath = props.csr.csrpath;\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"subtitle1\" component=\"h2\">\n        ID: {props.csr.id} CN: {props.csr.cn} Status: {props.csr.status}\n      </Typography>\n      <Typography variant=\"body1\" component=\"h3\">\n        C: {props.csr.c} ST: {props.csr.st} L: {props.csr.l} O: {props.csr.o}\n      </Typography>\n      <Typography variant=\"body2\" component=\"h4\">\n        {ou !== '' && <p>OU: {ou} </p>}\n        {mail !== '' && <p>EMAIL: {mail} </p>}\n        {csrPath !== '' && <p>CSRFilePath: {csrPath}</p>}\n      </Typography>\n    </React.Fragment>\n  );\n}\n\nCSRInfo.propTypes = {\n  csr: PropTypes.object,\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  root: {\n    padding: '15px 15px 15px  15px',\n    margin: '10px',\n  },\n});\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { Paper, Grid, Button } from '@material-ui/core';\n\nimport CSRInfo from '../csr-info';\nimport { useStyles } from './csr-box-styles';\n\nexport default function CSRBox(props) {\n  const classes = useStyles();\n  return (\n    <Grid item xs={4}>\n      <Paper className={classes.root}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <CSRInfo csr={props.csr} />\n          </Grid>\n          <Button\n            component={Link}\n            to={`/config/${props.csr.id}`}\n            disabled={\n              props.csr.status !== 'NEW' && props.csr.status !== 'APPROBED'\n            }\n            color=\"primary\"\n            variant=\"contained\"\n            fullWidth\n          >\n            Select\n          </Button>\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n}\n\nCSRBox.propTypes = {\n  csr: PropTypes.object,\n};\n","import React, { useState, useEffect } from 'react';\n\nimport {\n  Grid,\n  CircularProgress,\n  Container,\n  Box,\n  Typography,\n  Divider,\n} from '@material-ui/core';\n\nimport CSRBox from '../components/csr-box';\nimport AlertBar from '../components/alert-bar';\n\nimport { updateKeycloakToken } from '../services/auth';\nimport { getCSRs } from '../services/api/enroller';\n\nexport default function Home() {\n  const [csrs, setCSRs] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(null);\n\n  const getCSRS = () => {\n    updateKeycloakToken().success(() => {\n      getCSRs()\n        .then((response) => {\n          if (response.ok) {\n            response.json().then((result) => {\n              if (result.csr !== undefined) {\n                setIsLoaded(true);\n                setCSRs(result.csr.csr);\n              }\n            });\n          } else {\n            response.text().then((text) => {\n              setIsLoaded(false);\n              setError(text);\n            });\n          }\n        })\n        .catch((error) => setError(error.message));\n    });\n  };\n\n  useEffect(() => {\n    getCSRS();\n  }, []);\n\n  return (\n    <Container maxWidth=\"md\">\n      {error !== null && (\n        <AlertBar setMessage={setError} message={error} type=\"error\" />\n      )}\n      {error === null && !isLoaded && csrs !== null && <CircularProgress />}\n      {error === null && isLoaded && csrs !== null && (\n        <Box border={1} p={4} borderRadius=\"borderRadius\">\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography variant=\"h3\">Configuration (Step 1)</Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Divider />\n            </Grid>\n            {csrs.map((csr) => (\n              <CSRBox key={csr.id.toString()} csr={csr} />\n            ))}\n          </Grid>\n        </Box>\n      )}\n    </Container>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    width: '100%',\n  },\n}));\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Grid,\n  Select,\n  MenuItem,\n  TextField,\n  Typography,\n  FormControl,\n} from '@material-ui/core';\nimport { useStyles } from './cert-properties-styles';\n\nconst algSize = new Map();\nalgSize.set('RSA', [2048, 4096]);\nalgSize.set('EC', [256, 384]);\n\nexport default function CertProperties(props) {\n  const [selectedAlgSize, setSelectedAlgSize] = useState([\n    2048,\n    4096,\n    256,\n    384,\n  ]);\n\n  const handleAlgChange = (event) => {\n    props.setAlgValue(event.target.value);\n    setSelectedAlgSize(algSize.get(event.target.value));\n  };\n\n  const handleAlgSizeChange = (event) => {\n    props.setSizeValue(event.target.value);\n  };\n\n  const handleCChange = (event) => {\n    props.setC(event.target.value);\n  };\n\n  const handleSTChange = (event) => {\n    props.setST(event.target.value);\n  };\n\n  const handleLChange = (event) => {\n    props.setL(event.target.value);\n  };\n\n  const handleOChange = (event) => {\n    props.setO(event.target.value);\n  };\n\n  const handleOUChange = (event) => {\n    props.setOU(event.target.value);\n  };\n\n  const handleCNChange = (event) => {\n    props.setCN(event.target.value);\n  };\n\n  const handleEmailChange = (event) => {\n    props.setEmail(event.target.value);\n  };\n\n  const classes = useStyles();\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={6}>\n        <Typography variant=\"h6\">Select key algorithm:</Typography>\n        <FormControl className={classes.formControl}>\n          <Select value={props.algValue} onChange={handleAlgChange}>\n            <MenuItem value=\"RSA\">RSA</MenuItem>\n            <MenuItem value=\"EC\">EC</MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={6}>\n        <Typography variant=\"h6\">Select key bit size:</Typography>\n        <FormControl className={classes.formControl}>\n          <Select value={props.sizeValue} onChange={handleAlgSizeChange}>\n            {selectedAlgSize.map((size, keyIndex) => (\n              <MenuItem key={keyIndex} value={size}>\n                {size}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={12}>\n        <Typography variant=\"h6\">Insert certificate properties:</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          fullWidth\n          label=\"Country name\"\n          onChange={handleCChange}\n          value={props.c}\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          fullWidth\n          label=\"State or province name\"\n          onChange={handleSTChange}\n          value={props.st}\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          fullWidth\n          label=\"Locality name\"\n          onChange={handleLChange}\n          value={props.l}\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          fullWidth\n          label=\"Organization name\"\n          onChange={handleOChange}\n          value={props.o}\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          fullWidth\n          label=\"Organizational Unit name\"\n          onChange={handleOUChange}\n          value={props.ou}\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          fullWidth\n          label=\"Common name\"\n          onChange={handleCNChange}\n          value={props.cn}\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          fullWidth\n          label=\"Email address\"\n          onChange={handleEmailChange}\n          value={props.email}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nCertProperties.propTypes = {\n  algValue: PropTypes.string.isRequired,\n  setAlgValue: PropTypes.func.isRequired,\n  sizeValue: PropTypes.number.isRequired,\n  setSizeValue: PropTypes.func.isRequired,\n  c: PropTypes.string.isRequired,\n  setC: PropTypes.func.isRequired,\n  st: PropTypes.string.isRequired,\n  setST: PropTypes.func.isRequired,\n  l: PropTypes.string.isRequired,\n  setL: PropTypes.func.isRequired,\n  o: PropTypes.string.isRequired,\n  setO: PropTypes.func.isRequired,\n  ou: PropTypes.string.isRequired,\n  setOU: PropTypes.func.isRequired,\n  cn: PropTypes.string.isRequired,\n  setCN: PropTypes.func.isRequired,\n  email: PropTypes.string.isRequired,\n  setEmail: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\n\nimport {\n  Container,\n  Grid,\n  Button,\n  Box,\n  Typography,\n  Divider,\n} from '@material-ui/core';\n\nimport CertProperties from '../../components/cert-properties';\nimport AlertBar from '../../components/alert-bar';\n\nimport { postGetCRT } from '../../services/api/backend';\nimport { updateKeycloakToken } from '../../services/auth';\n\nexport default function Operation() {\n  const [c, setC] = useState('ES');\n  const [st, setST] = useState('Gipuzkoa');\n  const [l, setL] = useState('Arrasate');\n  const [o, setO] = useState('LKS Next, S. Coop.');\n  const [ou, setOU] = useState('');\n  const [cn, setCN] = useState('NewDevice');\n  const [email, setEmail] = useState('');\n  const [sizeValue, setSizeValue] = useState(2048);\n  const [algValue, setAlgValue] = useState('RSA');\n  const [error, setError] = useState(null);\n\n  const handleCertSubmit = (event) => {\n    const data = {\n      keyAlg: algValue,\n      keySize: Math.trunc(sizeValue),\n      c: c,\n      st: st,\n      l: l,\n      o: o,\n      ou: ou,\n      cn: cn,\n      email: email,\n    };\n    updateKeycloakToken().success(() => {\n      postGetCRT(data)\n        .then((response) => {\n          if (response.ok) {\n            response.blob().then((blob) => {\n              setError(null);\n              const url = window.URL.createObjectURL(new Blob([blob]));\n              const link = document.createElement('a');\n              link.href = url;\n              link.setAttribute('download', `${data.cn}.pem`);\n              document.body.appendChild(link);\n              link.click();\n              link.parentNode.removeChild(link);\n            });\n          } else {\n            response.text().then((text) => {\n              setError(text);\n            });\n          }\n        })\n        .catch((error) => setError(error.message));\n    });\n    event.preventDefault();\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      {error !== null && (\n        <AlertBar setMessage={setError} message={error} type=\"error\" />\n      )}\n      <form onSubmit={handleCertSubmit}>\n        <Box border={1} p={4} borderRadius=\"borderRadius\">\n          <Grid container spacing={2} justify=\"center\">\n            <Grid item xs={12}>\n              <Typography variant=\"h3\">Operation</Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Divider />\n            </Grid>\n            <Grid item xs={12}>\n              <CertProperties\n                setC={setC}\n                c={c}\n                setST={setST}\n                st={st}\n                setL={setL}\n                l={l}\n                setO={setO}\n                o={o}\n                setOU={setOU}\n                ou={ou}\n                setCN={setCN}\n                cn={cn}\n                setEmail={setEmail}\n                email={email}\n                setSizeValue={setSizeValue}\n                sizeValue={sizeValue}\n                setAlgValue={setAlgValue}\n                algValue={algValue}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <Button\n                fullWidth\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n              >\n                Get Certificate\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n      </form>\n    </Container>\n  );\n}\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    marginBottom: theme.spacing(2),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  toolbar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  typoAppBarTitle: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(1),\n  },\n}));\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\n\nimport { useStyles } from './app-bar-styles';\n\nexport default function LamassuAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"inherit\" elevation={0}>\n        <Toolbar className={classes.toolbar}>\n          <Avatar\n            variant=\"square\"\n            alt=\"Lamassu Logo\"\n            src=\"lamassu_logo.png\"\n          ></Avatar>\n          <Typography variant=\"h6\" noWrap className={classes.typoAppBarTitle}>\n            Lamassu Device Manufacturing System\n          </Typography>\n          <Button component={Link} to=\"/\" replace variant=\"text\">\n            Configuration\n          </Button>\n          <Button component={Link} to=\"/operation\" replace variant=\"text\">\n            Operation\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport uuid from 'react-uuid';\nimport { Switch, Route, HashRouter } from 'react-router-dom';\nimport 'typeface-roboto';\nimport dotenv from 'dotenv';\n\nimport { CssBaseline } from '@material-ui/core';\nimport Config from './routes/config';\nimport Home from './routes';\nimport Operation from './routes/operation';\nimport ScrollToTop from './utils/scroll-to-top';\nimport LamassuAppBar from './components/app-bar';\n\nimport { initKeycloak } from './services/auth';\n\ndotenv.config();\n\ninitKeycloak().success((auth) => {\n  if (!auth) {\n    window.location.reaload();\n  } else {\n    render(\n      <HashRouter>\n        <CssBaseline />\n        <LamassuAppBar />\n        <ScrollToTop />\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={(props) => <Home key={uuid()} {...props} />}\n          />\n          <Route\n            path=\"/config/:id\"\n            render={(props) => <Config key={uuid()} {...props} />}\n          />\n          <Route\n            exact\n            path=\"/operation\"\n            render={(props) => <Operation key={uuid()} {...props} />}\n          />\n        </Switch>\n      </HashRouter>,\n      document.getElementById('root')\n    );\n  }\n});\n"],"sourceRoot":""}